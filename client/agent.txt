Group Members: 
Datasets
1. Crime Dataset
Source: https://www.kaggle.com/datasets/mrayushagrawal/us-crime-dataset
Description: A CSV file about crimes committed around the U.S., including city, state, year, type of crime, etc.
Size: 112 MB
Rows: 638,454
Columns: 24 (many irrelevant)
Summary Statistics: 638,454 murders across the U.S. since 1980. Average murder rate of 14.8K/year.
2. Top Local Jobs Dataset
Source:
https://www.bls.gov/oes/special.requests/oes_research_2023_allsectors.xlsx
https://www.bls.gov/oes/current/oessrcma.htm
https://www.bls.gov/oes/tables.htm
Description: OES dataset with job/industry workforce percentages and average salary per job.
Size: 146 MB
Rows: 855,000
Columns: 24 (many irrelevant)
Summary Statistics: 161M employed in the U.S. in 2023; 5,330 work in agriculture in Alabama.
Milestone 2 - Project Outline: Task Breakdown

Christian – Database Architecture
Handles schema design and SQL setup—technical and foundational.
Relational Schema
Design a single ER diagram representing your application's database schema.


SQL DDL


Write the SQL Data Definition Language statements needed to create the database based on your schema.
CREATE TABLE Jobs (
    area_title VARCHAR(100) PRIMARY KEY,
    naics_title VARCHAR(150) NOT NULL,
    occ_title VARCHAR(150) NOT NULL,
    tot_emp INTEGER,
    a_mean NUMERIC(10, 2),
    pct_total NUMERIC(5, 2)
);
CREATE TABLE Crime (
    crime_id SERIAL PRIMARY KEY, 
    state VARCHAR(100) NOT NULL,
    year INTEGER NOT NULL,
    crime_type VARCHAR(100) NOT NULL,
    victim_count INTEGER,
    perpetrator_count INTEGER,
    weapon VARCHAR(100),
   state FOREIGN KEY REFERENCES Jobs(area_title)
);


Sean – Functionality, Features, and Pages
Motivation & Problem Statement
The application we are building addresses a pressing need to understand the intersection of the crime data and employment trends across various U.S. cities and states. From a UI/UX standpoint, our goal is to present the data in a way that is engaging, intuitive and interactive for the end user while making it action-oriented. Users like policy analysts, city planners, or researchers can easily infer correlations such as whether high-violence crimes coincide with annual mean wages. These insights could be used to inform policy decisions on violent crime prevalence versus the annual mean wage per sector and help steer resources accordingly or even increase awareness of how local jobs shape crime patterns or how wage influences different crime types.
	Core features we are implementing
Search and Filter 
USA Map Visual 
Interactive Visual Boards 
Predefined Custom Queries 
AI powered insights 
Time-Series Trend Analysis 

Secondary Features - if we have time
User Accounts & Corporate Accounts
Scenario Simulation Demo
Export Functionality for maps & results as reports
Speak to InvestiGator AI 
Pages Overview
1. Hero/Landing Page: Landing page with a navbar, action button and brief typography communicating the value of the application. This is the hook of the application, we will make it intuitive and scannable by leveraging styling and webpage interactivity technologies for a good user experience. We could add a tagline, ex. “Powered by AI” to communicate the value of the application in tandem with its use of modern tools .
2. Search and Filter Page: Main Page that allows users to choose states, select years , crime types, and job sector details. Users would also be able to view AI suggested queries.
The functional difference is that it is a real-time filter application with dynamic data loading that let’s users see how different data columns overlap with each other. 
3. Statistic Visualization Dashboard: Users are able to switch between different modes of presentation to own how they consume the data. They can quickly filter based on different columns and infographic types with optional AI trend analysis summaries.
The functional difference is that it allows quick toggling of different visualization types.
4. Map Visualization: Users are able to spatially manipulate the USA map while dynamically loaded queries apply filters to show heatmaps (thresholds will be set), numbers of victims to crime or modal tables with summary statistics.
The functional difference is that it presents an immersive visualization of the data across the entirety of the country to allow users to infer key trends in a much more intuitive way.
(If time allows)
5. AI Powered Insights: This page would have an AI assistant, InvestiGator that takes in voice/text/document input. It could serve any/all of these purposes. 
Users can have AI voice conversations with generated reports or visuals from the application. 
Users can run custom queries by simply using voice commands. 
Users can interact with it to navigate through the different parts of the applications, get a tutorial of the app, get query recommendations or use it to infer complex trends in reports.
The functional difference is that it allows users to have a natural conversation with AI. 

Rena – Data Pipeline & Technology Stack
Use pandas to clean the data by removing unnecessary columns.
We will only be keeping these columns:
Crime Dataset: Columns to Keep and Why
State: Primary join key for merging with the jobs dataset.
Year: Allows time-based trend analysis (e.g., changes over years).
Crime Type: Necessary to distinguish between types of crime (e.g., violent vs. nonviolent).
Victim Count: Helps quantify the impact and scale of crimes.
Perpetrator Count: Complements victim data and helps analyze involvement
Weapon: Useful if analyzing weapon-based trends.
Jobs Dataset: Columns to Keep and Why
AREA_TITLE: Corresponds to "State" in crime data and is used as the join key.
NAICS_TITLE: Describes the industry sector (e.g., Healthcare, Agriculture).
OCC_TITLE: Describes specific occupations (e.g., Cashiers, Software Developers).
TOT_EMP: Indicates employment volume per occupation (workforce size).
A_MEAN: Annual mean wage; reflects economic health and income levels.
PCT_TOTAL: Shows percentage share of each job in the state's workforce.
Some of the rows have asterisks *, or # as a value for some of the columns. We will delete these rows if the data is missing.
Technologies Used
PostgreSQL
We are using PostgreSQL so we can query the necessary data from our datasets to find out answers to our questions.
React.js
This is used to help design the frontend of our website and to showcase the queries in a format readable to the user. For example, we will be utilizing react for the map visual, the interactive visual boards, trend analysis, and more.
HTML
Useful for structuring the content and layout of each page in the web application, such as organizing the hero page, filter forms, and data dashboards.
Typescript/Javascript
Used to make the website interactive by handling dynamic filtering, real-time updates, and responsive visualizations. TypeScript adds type safety for cleaner, more maintainable code.

Danielle – GitHub Setup & Final Composition
Handles team coordination, version control, and writing the final team section.
GitHub Setup
Create the private GitHub repository and share it with your Project Mentor.
Set up the version control environment and ensure all members have access.
Team Responsibilities


Write the section that outlines what each group member is responsible for in the project.
Final Document Assembly


Compile all contributions into a single cohesive document.
Edit for consistency, polish, formatting, and flow.

Team Responsibilities
Sean Donovan – Head of Frontend
Design and build the user interface (UI) for the data dashboard
Implement data visualizations (e.g., bar charts, state-level maps) using libraries such as Plotly, Chart.js, or D3
Create filterable views by state, year, and crime type
Integrate frontend with backend API endpoints to fetch cleaned and merged data

Christian Ishimwe – Backend Support
Develop complex cross-dataset queries (e.g., wage-crime correlations)
Support building a unified backend structure with Danielle and Christian
Assist in documenting data transformation logic and data model for frontend consumption

Danielle Darfour – Backend Support
Clean and structure the jobs dataset
Write queries to calculate average wages, top job sectors per state, and employment trends
Merge jobs and crime data on State for joined analysis

Rena Li – Backend Support
Clean and preprocess the crime dataset
Aggregate crime statistics by state and year
Build endpoints to serve crime-related queries (e.g., most common crimes by state)


DATA WE HAVE 
Crime Dataset: Columns to Keep and Why
State: Primary join key for merging with the jobs dataset.


City: Enables localized analysis and supports joins with the housing dataset.


Year: Allows time-based trend analysis (e.g., changes over years).


Crime Type: Necessary to distinguish between types of crime (e.g., violent vs. nonviolent).


Incident: Enables access to the number of crime incidents for analysis.


Weapon: Useful if analyzing weapon-based trends.



Jobs Dataset: Columns to Keep and Why
AREA_TITLE: Corresponds to "State" in crime data and is used as the join key.


NAICS_TITLE: Describes the industry sector (e.g., Healthcare, Agriculture).


OCC_TITLE: Describes specific occupations (e.g., Cashiers, Software Developers).


TOT_EMP: Indicates employment volume per occupation (workforce size).


A_MEAN: Annual mean wage; reflects economic health and income levels.


PCT_TOTAL: Shows percentage share of each job in the state's workforce.



Housing Dataset: Columns to Keep and Why
city: Enables localized housing insights.


state: Join key with both jobs and crime datasets.


property_type: To filter or group by housing type.


median_sale_price: Key economic indicator for housing affordability.


median_list_price: For sale vs. list price comparisons.


median_ppsf: Price per square foot helps with cross-regional comparisons.


homes_sold: Indicates market activity and housing demand.


inventory: Total available housing — used in supply-demand analysis.


months_of_supply: Reflects housing market competitiveness.


median_dom: Measures speed of housing market (days on market).


avg_sale_to_list: Reflects seller/buyer leverage in the market.

